{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","color","opacity","textDecoration","React","Component","TodoList","todos","map","key","Header","prevProps","prevState","x","Math","floor","random","y","z","headerSpan","document","getElementById","paddingBottom","lineHeight","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","response","filter","addTodoItem","post","data","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.6737e756.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Class-Based Component\r\nclass TodoItem extends React.Component {\r\n    componentWillUnmount() {\r\n        alert('Item about to be deleted!');\r\n    };\r\n    render() {\r\n        const { completed, id, title } = this.props.todo;\r\n\r\n        const completedStyle = {\r\n            color: 'firebrick',\r\n            opacity: 0.6,\r\n            textDecoration: 'line-through',\r\n        }\r\n\r\n        return <li className=\"todo-item\">\r\n            <label>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    checked={completed} \r\n                    onChange={() => this.props.handleChangeProps(id)}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n            <button onClick={() => this.props.deleteTodoProps(id)}>\r\n                x\r\n            </button>\r\n            <span style={completed ? completedStyle : null}>\r\n                {title}\r\n            </span>\r\n        </li>;\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem'\r\n\r\nclass TodoList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(todo => (\r\n                    <TodoItem \r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    componentDidUpdate(prevProps, prevState) {\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var color = `rgb(${x},${y},${z})`;\r\n      \r\n        if (prevProps.headerSpan !== this.props.headerSpan) {\r\n          document.getElementById('inH1').style.color = color;\r\n        }\r\n    };\r\n    render() {\r\n        const headerStyle = {\r\n            paddingBottom: '20px',\r\n            lineHeight: '2em',\r\n        };\r\n        return (\r\n            <header >\r\n                <h1 id=\"inH1\" style={headerStyle}>\r\n                    Simple Todo App\r\n                </h1>\r\n                <p>Please add to-dos item(s) through the input field</p>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    };\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addTodoProps(this.state.title);\r\n        this.setState({\r\n            title: ''\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"add todo...\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange} className=\"input-text\"\r\n                />\r\n                <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo;","import React from 'react';\r\nimport TodoList from './TodosList';\r\nimport Header from './Header';\r\nimport InputTodo from './InputTodo';\r\nimport axios from \"axios\";\r\n\r\nclass TodoContainer extends React.Component {\r\n    state = {\r\n        todos: [],\r\n        show: false\r\n    };\r\n    handleChange = id => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if(todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            }),\r\n            show: !this.state.show\r\n        });\r\n    };\r\n    delTodo = id => {\r\n        axios\r\n            .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(response =>\r\n                this.setState({\r\n                    todos: [\r\n                        ...this.state.todos.filter(todo => {\r\n                            return todo.id !== id;\r\n                        })\r\n                    ]\r\n                })\r\n            )\r\n    };\r\n    addTodoItem = title => {\r\n        axios\r\n            .post('https://jsonplaceholder.typicode.com/todos', {\r\n                title: title,\r\n                completed: false\r\n            })\r\n            .then(response =>\r\n                this.setState({\r\n                    todos: [...this.state.todos, response.data]\r\n                })\r\n            )\r\n    };\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n        .then(response => this.setState({ todos: response.data }));\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header headerSpan={this.state.show}/>\r\n                <InputTodo addTodoProps={this.addTodoItem} />\r\n                <TodoList\r\n                    todos={this.state.todos}\r\n                    handleChangeProps={this.handleChange}\r\n                    deleteTodoProps={this.delTodo}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoContainer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\n\r\nimport TodoContainer from './components/TodoContainer';\r\n\r\nReactDOM.render(\r\n    <TodoContainer />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}
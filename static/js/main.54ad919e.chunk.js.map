{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","useEffect","alert","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","color","opacity","textDecoration","TodoList","todos","map","key","Header","isInitialMount","useRef","x","Math","floor","random","y","z","current","document","getElementById","headerSpan","paddingBottom","lineHeight","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","name","placeholder","value","target","TodoContainer","setTodos","show","setShow","axios","get","then","response","data","newTodo","uuidv4","filter","ReactDOM","render"],"mappings":"2PAsCeA,G,OAnCE,SAAAC,GACbC,qBAAU,WACN,OAAO,WACHC,MAAM,gCAEX,IALmB,MAOWF,EAAMG,KAA/BC,EAPc,EAOdA,UAAWC,EAPG,EAOHA,GAAIC,EAPD,EAOCA,MAQvB,OACI,wBAAIC,UAAU,aACV,+BACI,2BACIC,KAAK,WACLC,QAASL,EACTM,SAAU,kBAAMV,EAAMW,kBAAkBN,MAE5C,0BAAME,UAAU,eAEpB,4BAAQK,QAAS,kBAAMZ,EAAMa,gBAAgBR,KAA7C,KAGA,0BAAMS,MAAOV,EAnBE,CACnBW,MAAO,YACPC,QAAS,GACTC,eAAgB,gBAgB8B,MACrCX,MCdFY,EAfE,SAAAlB,GACb,OACI,6BACKA,EAAMmB,MAAMC,KAAI,SAAAjB,GAAI,OACjB,kBAAC,EAAD,CACIkB,IAAKlB,EAAKE,GACVF,KAAMA,EACNQ,kBAAmBX,EAAMW,kBACzBE,gBAAiBb,EAAMa,uBCsB5BS,EA/BA,SAAAtB,GACX,IAKMuB,EAAiBC,kBAAO,GAe9B,OAbAvB,qBAAU,WACN,IAAIwB,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBb,EAAK,cAAUU,EAAV,YAAeI,EAAf,YAAoBC,EAApB,KAELP,EAAeQ,QACfR,EAAeQ,SAAU,EAEzBC,SAASC,eAAe,QAAQnB,MAAMC,MAAQA,IAEnD,CAACf,EAAMkC,aAGN,gCACI,wBAAI7B,GAAG,OAAOS,MAtBF,CAChBqB,cAAe,OACfC,WAAY,QAoBR,mBAGA,kF,gBCQGC,EAlCG,SAAArC,GAAU,IAAD,EACWsC,mBAAS,CACvChC,MAAO,KAFY,mBAChBiC,EADgB,KACLC,EADK,KAoBvB,OACI,0BAAMC,SATW,SAAAC,GACjBA,EAAEC,iBACF3C,EAAM4C,aAAaL,EAAUjC,OAC7BkC,EAAa,CACTlC,MAAO,MAKmBC,UAAU,kBACpC,2BACIC,KAAK,OACLqC,KAAK,QACLC,YAAY,cACZC,MAAOR,EAAUjC,MACjBI,SAtBK,SAAAgC,GACbF,EAAa,2BACND,GADK,kBAEPG,EAAEM,OAAOH,KAAOH,EAAEM,OAAOD,UAmBFxC,UAAU,eAElC,2BAAOC,KAAK,SAASuC,MAAM,SAASxC,UAAU,mB,2BC8B3C0C,EArDO,SAAAjD,GAAU,IAAD,EACDsC,mBAAS,IADR,mBACpBnB,EADoB,KACb+B,EADa,OAEHZ,oBAAS,GAFN,mBAEpBa,EAFoB,KAEdC,EAFc,KAwC3B,OANAnD,qBAAU,WACNoD,IACKC,IAAI,uDACJC,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAASC,WACzC,IAGC,yBAAKlD,UAAU,aACX,kBAAC,EAAD,CAAQ2B,WAAYiB,IACpB,kBAAC,EAAD,CAAWP,aAnBC,SAAAtC,GAChB,IAAMoD,EAAU,CACZrD,GAAIsD,cACJrD,MAAOA,EACPF,WAAW,GAGf8C,EAAS,GAAD,mBAAK/B,GAAL,CAAYuC,QAahB,kBAAC,EAAD,CACIvC,MAAOA,EACPR,kBA1CS,SAAAN,GACjB6C,EACI/B,EAAMC,KAAI,SAAAjB,GAIN,OAHGA,EAAKE,KAAOA,IACXF,EAAKC,WAAaD,EAAKC,WAEpBD,MAGfiD,GAASD,IAkCDtC,gBA/BI,SAAAR,GACZ6C,EAAS,YACF/B,EAAMyC,QAAO,SAAAzD,GACZ,OAAOA,EAAKE,KAAOA,YCrBnCwD,IAASC,OACL,kBAAC,EAAD,MACA9B,SAASC,eAAe,W","file":"static/js/main.54ad919e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { render } from '@testing-library/react';\r\n\r\nconst TodoItem = props => {\r\n    useEffect(() => {\r\n        return () => {\r\n            alert('Item about to be deleted.');\r\n        }\r\n    }, [])\r\n\r\n    const { completed, id, title } = props.todo;\r\n\r\n    const completedStyle = {\r\n        color: 'firebrick',\r\n        opacity: 0.6,\r\n        textDecoration: 'line-through',\r\n    }\r\n\r\n    return (\r\n        <li className=\"todo-item\">\r\n            <label>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    checked={completed} \r\n                    onChange={() => props.handleChangeProps(id)}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n            <button onClick={() => props.deleteTodoProps(id)}>\r\n                x\r\n            </button>\r\n            <span style={completed ? completedStyle : null}>\r\n                {title}\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem'\r\n\r\nconst TodoList = props => {\r\n    return (\r\n        <div>\r\n            {props.todos.map(todo => (\r\n                <TodoItem \r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodoProps={props.deleteTodoProps}\r\n                />\r\n            ))}\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst Header = props => {\r\n    const headerStyle = {\r\n        paddingBottom: '20px',\r\n        lineHeight: '2em',\r\n    }\r\n\r\n    const isInitialMount = useRef(true);\r\n\r\n    useEffect(() => {\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var color = `rgb(${x},${y},${z})`;\r\n      \r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n        } else {\r\n            document.getElementById('inH1').style.color = color;\r\n        }\r\n    }, [props.headerSpan])\r\n\r\n    return (\r\n        <header >\r\n            <h1 id=\"inH1\" style={headerStyle}>\r\n                Simple Todo App\r\n            </h1>\r\n            <p>Please add to-dos item(s) through the input field</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nconst InputTodo = props => {\r\n    const [inputText, setInputText] = useState({\r\n        title: ''\r\n    });\r\n\r\n    const onChange = e => {\r\n        setInputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.addTodoProps(inputText.title);\r\n        setInputText({\r\n            title: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input \r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"add todo...\"\r\n                value={inputText.title}\r\n                onChange={onChange} className=\"input-text\"\r\n            />\r\n            <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputTodo;\r\n\r\n// import React, { Component } from 'react';\r\n\r\n// class InputTodo extends Component {\r\n//     state = {\r\n//         title: ''\r\n//     };\r\n//     onChange = e => {\r\n//         this.setState({\r\n//             [e.target.name]: e.target.value\r\n//         });\r\n//     };\r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n//         this.props.addTodoProps(this.state.title);\r\n//         this.setState({\r\n//             title: ''\r\n//         });\r\n//     };\r\n//     render() {\r\n//         return (\r\n//             <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n//                 <input \r\n//                     type=\"text\"\r\n//                     name=\"title\"\r\n//                     placeholder=\"add todo...\"\r\n//                     value={this.state.title}\r\n//                     onChange={this.onChange} className=\"input-text\"\r\n//                 />\r\n//                 <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default InputTodo;","import React, { useState, useEffect } from 'react';\r\nimport TodoList from './TodosList';\r\nimport Header from './Header';\r\nimport InputTodo from './InputTodo';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nconst TodoContainer = props => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleChange = id => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if(todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n        setShow(!show);\r\n    }\r\n\r\n    const delTodo = id => {\r\n        setTodos([\r\n            ...todos.filter(todo => {\r\n                return todo.id !== id;\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false,\r\n        }\r\n\r\n        setTodos([...todos, newTodo]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/todos?_limit=5')\r\n            .then(response => setTodos(response.data));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header headerSpan={show}/>\r\n            <InputTodo addTodoProps={addTodoItem} />\r\n            <TodoList\r\n                todos={todos}\r\n                handleChangeProps={handleChange}\r\n                deleteTodoProps={delTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoContainer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\n\r\nimport TodoContainer from './components/TodoContainer';\r\n\r\nReactDOM.render(\r\n    <TodoContainer />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}